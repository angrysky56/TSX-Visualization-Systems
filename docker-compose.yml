name: tsx-visualization

services:
  ### Core Infrastructure Layer ###

  # ETCD - Distributed Key-Value Store
  etcd:
    container_name: tsx-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
      - ETCD_MAX_REQUEST_BYTES=10485760
      - ETCD_HEARTBEAT_INTERVAL=250
      - ETCD_ELECTION_TIMEOUT=1250
    volumes:
      - etcd_data:/etcd
    command: etcd -advertise-client-urls=http://0.0.0.0:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped
    networks:
      - tsx-quantum-net
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "3"

  ### Data Persistence Layer ###

  # MinIO - Object Storage System
  minio:
    container_name: tsx-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_VOLUMES: "/data"
      MINIO_BROWSER_REDIRECT_URL: http://localhost:9010
      MINIO_REGION: "us-east-1"
      MINIO_DOMAIN: "localhost"
    volumes:
      - minio_data:/data
    ports:
      - "9010:9000"  # API
      - "9011:9001"  # Console
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped
    networks:
      - tsx-quantum-net
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "3"

  ### Quantum Processing Layer ###

  # Milvus - Vector Database Engine
  milvus:
    container_name: tsx-milvus
    image: milvusdb/milvus:v2.5
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      COMMON_STORAGE_PATH: /var/lib/milvus
      COMMON_SECURITY_ENABLED: "false"
      LOG_LEVEL: warning
      METRICS_ENABLE: "true"
      COMMON_PROFILING_ENABLED: "true"
    volumes:
      - milvus_data:/var/lib/milvus
    ports:
      - "19530:19530"  # Service port
      - "9091:9091"    # Metrics port
    depends_on:
      etcd:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/metrics"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped
    networks:
      - tsx-quantum-net
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "3"

  ### Monitoring & Analytics Layer ###

  # Prometheus - Metrics Collection Engine
  prometheus:
    container_name: tsx-prometheus
    image: prom/prometheus:v2.44.0
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped
    networks:
      - tsx-quantum-net
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "3"

  # Grafana - Analytics Visualization Platform
  grafana:
    container_name: tsx-grafana
    image: grafana/grafana:9.5.2
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=quantum-admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "4000:3000"  # Changed from 3000:3000 to avoid conflict
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - tsx-quantum-net
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "3"

  ### Development Environment ###

  # Development Server
  dev:
    container_name: tsx-dev
    build:
      context: .
      dockerfile: Dockerfile.dev.new
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:4000  # Updated to match new Grafana port
      - VITE_MILVUS_HOST=milvus
      - VITE_MILVUS_PORT=19530
    depends_on:
      - milvus
    networks:
      - tsx-quantum-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

### Volume Definitions ###
volumes:
  etcd_data:
    driver: local
  minio_data:
    driver: local
  milvus_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

### Network Configuration ###
networks:
  tsx-quantum-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
